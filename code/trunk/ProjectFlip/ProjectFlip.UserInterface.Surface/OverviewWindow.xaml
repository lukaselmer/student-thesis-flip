<s:SurfaceWindow xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="http://schemas.microsoft.com/surface/2008" xmlns:Surface="clr-namespace:ProjectFlip.UserInterface.Surface" xmlns:Converters="clr-namespace:ProjectFlip.UserInterface.Surface.Converters" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" xmlns:ee="http://schemas.microsoft.com/expression/2010/effects" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:System="clr-namespace:System;assembly=mscorlib" x:Class="ProjectFlip.UserInterface.Surface.OverviewWindow" 
    mc:Ignorable="d" 
    Title="Project Flip 2.0"
    Background="White">

    <s:SurfaceWindow.Resources>

        <Style x:Key="TextStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Margin" Value="0" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="FontFamily" Value="AA Zuehlke" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        </Style>

        <Style x:Key="BackgroundButtonStyle" TargetType="{x:Type s:SurfaceButton}">
            <Setter Property="Background" Value="#AA000000" />
        </Style>

        <Style x:Key="FilterButtonStyle" TargetType="{x:Type s:SurfaceButton}">
            <Setter Property="Height" Value="80"/>
            <Setter Property="Width" Value="200"/>
            <Setter Property="Margin" Value="10" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type s:SurfaceButton}">
                        <Grid>
                            <Rectangle Height="80" RadiusX="10" RadiusY="10" Width="200" Fill="#FFFFD869">
                                <Rectangle.Stroke>
                                    <LinearGradientBrush EndPoint="0.571,0.968" StartPoint="0.429,0.032">
                                        <GradientStop Color="#FFFFF1C8" Offset="0.448"/>
                                        <GradientStop Color="#FFF0BC4F" Offset="0.566"/>
                                    </LinearGradientBrush>
                                </Rectangle.Stroke>
                                <Rectangle.Effect>
                                    <DropShadowEffect Direction="310" Opacity="0.25" BlurRadius="3" ShadowDepth="1"/>
                                </Rectangle.Effect>
                            </Rectangle>
                            <Border BorderThickness="2" Height="78" Width="200" CornerRadius="10">
                                <Border.Effect>
                                    <BlurEffect/>
                                </Border.Effect>
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.433,0.029" StartPoint="0.567,0.971">
                                        <GradientStop Color="#FFF0BC4F" Offset="0.448"/>
                                        <GradientStop Color="#FFFFF1C8" Offset="0.566"/>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                            </Border>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="ProjectNoteButtonTemplate">
            <s:SurfaceButton Margin="10" Background="White" Width="220" Height="280" CommandParameter="{Binding}"
    			Command="{Binding DataContext.ShowDetailsCommand, RelativeSource={RelativeSource AncestorType={x:Type s:SurfaceWindow}}}">

                <s:SurfaceButton.Effect>
                    <DropShadowEffect Direction="310" Opacity="0.25"/>
                </s:SurfaceButton.Effect>
                <StackPanel Margin="10" Orientation="Vertical"  HorizontalAlignment="Center">
                    <Image Source="{Binding Image}" HorizontalAlignment="Center"/>
                    <StackPanel Orientation="Horizontal" Margin="0, 10, 0, 0">
                        <Rectangle Width="90" Margin="0,0,10,0"  Height="2" Fill="#ff8204" />
                        <Rectangle Width="90" Margin="10,0,0,0" Height="2" Fill="#ff8204" />
                    </StackPanel>
                    <TextBlock Margin="5" Style="{DynamicResource TextStyle}" Text="{Binding Title}" Foreground="#ff8204"/>
                </StackPanel>
            </s:SurfaceButton>
        </DataTemplate>

        <ItemsPanelTemplate x:Key="ItemPanelTemplate">
            <WrapPanel Margin="0">
                <WrapPanel.Resources>
                    <Style TargetType="{x:Type s:SurfaceListBoxItem}">
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                    </Style>
                </WrapPanel.Resources>
            </WrapPanel>
        </ItemsPanelTemplate>
        <!-- Base Grid style for 55 dpi -->
    	<Style TargetType="{x:Type Control}" x:Key="ControlBaseStyle">
    		<Setter Property="FocusVisualStyle"	
    			Value="{x:Null}"/>
    		<Setter Property="SnapsToDevicePixels"
    			Value="False"/>
    		<Setter Property="FontFamily"
    			Value="Segoe360"/>
    		<Setter Property="FontWeight"
    			Value="Normal"/>
    		<Setter Property="FontSize"
    			Value="17"/>
    		<Setter Property="Padding"
    			Value="6,2,10,10"/>
    		<Setter Property="MinHeight"
    			Value="38"/>
    		<Setter Property="MinWidth"
    			Value="38"/>
    		<Setter Property="Margin"
    			Value="1"/>
    		<Setter Property="HorizontalContentAlignment"
    			Value="Left"/>
    		<Setter Property="VerticalContentAlignment"
    			Value="Top"/>
    		<Setter Property="BorderThickness"
    			Value="2"/>
    	</Style>
        <!-- public section -->
    	<SolidColorBrush x:Key="ControlHitAreaBrush"    
    		Color="#00FFFFFF"/>
        <!-- Minimum HitArea Base Style for 55 dpi-->
    	<Style x:Key="SurfaceHitAreaBaseStyle"
    		TargetType="{x:Type Control}">
    		<Setter Property="SnapsToDevicePixels"
    			Value="False"/>
    		<Setter Property="Background"
    			Value="{StaticResource ControlHitAreaBrush}"/>
    		<Setter Property="IsTabStop"
    			Value="False"/>
    		<Setter Property="Focusable"
    			Value="False"/>
    		<Setter Property="FocusVisualStyle"
    			Value="{x:Null}"/>
    		<Setter Property="MinWidth"
    			Value="40" />
    		<Setter Property="MinHeight"
    			Value="40" />
    	</Style>
    	<Style x:Key="SurfaceVertScrollBarRepeatButton"
    		TargetType="{x:Type s:SurfaceRepeatButton}" >
    		<Setter Property="Interval"
    			Value="150" />
    		<Setter Property="BorderBrush"
    			Value="{x:Null}" />
    		<Setter Property="Background"
    			Value="{StaticResource ControlHitAreaBrush}" />
    		<Setter Property="OverridesDefaultStyle" Value="true"/>
    		<Setter Property="Focusable" Value="false"/>
    		<Setter Property="IsTabStop" Value="false"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type s:SurfaceRepeatButton}">
    					<Grid Width="40" Background="{TemplateBinding Background}">
    						<Rectangle  HorizontalAlignment="Center" 
    							x:Name="Line"
    							MinWidth="2"
    							Fill="{DynamicResource {x:Static s:SurfaceColors.TrackBackgroundBrushKey}}"/>
    					</Grid>
    					<ControlTemplate.Triggers>
    						<Trigger Property="IsEnabled"
    							Value="False">
    							<Setter Property="Fill"   
    								TargetName="Line"                             
    								Value="{DynamicResource {x:Static s:SurfaceColors.ThumbDisabledBrushKey}}"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
        <!-- ScrollBar Vert Thumb -->
    	<Style x:Key="SurfaceScrollBarThumbStyle"
    		TargetType="{x:Type s:SurfaceThumb}"
    		BasedOn="{StaticResource SurfaceHitAreaBaseStyle}">
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type s:SurfaceThumb}">
    					<ControlTemplate.Resources>
    						<Storyboard x:Key="Touch">
    							<DoubleAnimation Duration="0:0:0.05"
    								Storyboard.TargetName="Thumb"
    								Storyboard.TargetProperty="Width" 
    								To="16"/>
    							<ThicknessAnimation Duration="0:0:0.05"
    								Storyboard.TargetName="Thumb"
    								Storyboard.TargetProperty="Margin"
    								To="-1,0,-1,0" />
    						</Storyboard>
    						<Storyboard x:Key="Release">
    							<DoubleAnimation Duration="0:0:0.1"
    								Storyboard.TargetName="Thumb" 
    								Storyboard.TargetProperty="Width"
    								To="14"/>
    							<ThicknessAnimation Duration="0:0:0.1"
    								Storyboard.TargetName="Thumb"
    								Storyboard.TargetProperty="Margin" 
    								To="0,0,0,0" />
    						</Storyboard>
    					</ControlTemplate.Resources>
    					<Grid   x:Name="Grid"
    						Background="{TemplateBinding Background}"
    						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
    						<Rectangle  x:Name="Thumb"
    							Height="Auto"
    							Width="14" 
    							HorizontalAlignment="Stretch"
    							VerticalAlignment="Stretch"
    							Fill="{DynamicResource {x:Static s:SurfaceColors.ThumbEnabledBrushKey}}" />
    					</Grid>
    					<ControlTemplate.Triggers>
    						<Trigger Property="s:TouchExtensions.AreAnyInputDevicesCapturedWithin"
    							Value="True">
    							<Trigger.EnterActions>
    								<BeginStoryboard Storyboard="{StaticResource Touch}"/>
    							</Trigger.EnterActions>
    							<Trigger.ExitActions>
    								<BeginStoryboard Storyboard="{StaticResource Release}"/>
    							</Trigger.ExitActions>
    						</Trigger>
    						<Trigger  Property="IsEnabled"
    							Value="False">
    							<Setter Property="Fill"
    								TargetName="Thumb"
    								Value="{DynamicResource {x:Static s:SurfaceColors.ThumbDisabledBrushKey}}"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
        <!-- ScrollBar RepeatButton -->
    	<Style x:Key="SurfaceHorzScrollBarRepeatButton"
    		TargetType="{x:Type s:SurfaceRepeatButton}" >
    		<Setter Property="Interval"
    			Value="150" />
    		<Setter Property="BorderBrush"
    			Value="{x:Null}" />
    		<Setter Property="Background"
    			Value="{StaticResource ControlHitAreaBrush}" />
    		<Setter Property="OverridesDefaultStyle" Value="true"/>
    		<Setter Property="Focusable" Value="false"/>
    		<Setter Property="IsTabStop" Value="false"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type s:SurfaceRepeatButton}">
    					<Grid Height="40" Background="{TemplateBinding Background}">
    						<Rectangle VerticalAlignment="Center"
    							x:Name="Line"
    							MinHeight="2"
    							Fill="{DynamicResource {x:Static s:SurfaceColors.TrackBackgroundBrushKey}}"/>
    					</Grid>
    					<ControlTemplate.Triggers>
    						<Trigger Property="IsEnabled"
    							Value="False">
    							<Setter Property="Fill"   
    								TargetName="Line"                             
    								Value="{DynamicResource {x:Static s:SurfaceColors.ThumbDisabledBrushKey}}"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<Style x:Key="SurfaceScrollBarHorizThumbStyle"
    		TargetType="{x:Type s:SurfaceThumb}"
    		BasedOn="{StaticResource SurfaceHitAreaBaseStyle}">
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type s:SurfaceThumb}">
    					<ControlTemplate.Resources>
          <!-- Vertical orientation -->
    						<Storyboard x:Key="Touch">
    							<DoubleAnimation Duration="0:0:0.05"
    								Storyboard.TargetName="Thumb"
    								Storyboard.TargetProperty="Height" 
    								To="16"/>
    							<ThicknessAnimation Duration="0:0:0.05"
    								Storyboard.TargetName="Thumb"
    								Storyboard.TargetProperty="Margin"
    								To="0,-1,0,-1" />
    						</Storyboard>
    						<Storyboard x:Key="Release">
    							<DoubleAnimation Duration="0:0:0.1"
    								Storyboard.TargetName="Thumb" 
    								Storyboard.TargetProperty="Height"
    								To="14"/>
    							<ThicknessAnimation Duration="0:0:0.1"
    								Storyboard.TargetName="Thumb"
    								Storyboard.TargetProperty="Margin" 
    								To="0,0,0,0" />
    						</Storyboard>
    					</ControlTemplate.Resources>
    					<Grid x:Name="Grid"
    						Background="{TemplateBinding Background}"
    						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" >
    						<Rectangle  x:Name="Thumb"
    							Width="Auto"
    							Height="14"
    							HorizontalAlignment="Stretch"
    							VerticalAlignment="Stretch"  
    							Fill="{DynamicResource {x:Static s:SurfaceColors.ThumbEnabledBrushKey}}" />
    					</Grid>
    					<ControlTemplate.Triggers>
    						<Trigger Property="s:TouchExtensions.AreAnyInputDevicesCapturedWithin"
    							Value="True">
    							<Trigger.EnterActions>
    								<BeginStoryboard Storyboard="{StaticResource Touch}"/>
    							</Trigger.EnterActions>
    							<Trigger.ExitActions>
    								<BeginStoryboard Storyboard="{StaticResource Release}"/>
    							</Trigger.ExitActions>
    						</Trigger>
    						<Trigger Property="IsEnabled"
    							Value="False">
    							<Setter Property="Fill"
    								TargetName="Thumb"
    								Value="{DynamicResource {x:Static s:SurfaceColors.ThumbDisabledBrushKey}}"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    <!-- ScrollBar -->
    	<Style x:Key="SurfaceScrollBarStyle"
    		TargetType="{x:Type s:SurfaceScrollBar}"
         >
    		<Style.Resources>
    			<System:Double x:Key="{x:Static SystemParameters.VerticalScrollBarButtonHeightKey}">38</System:Double>
    			<System:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}">38</System:Double>
    		</Style.Resources>
    		<Setter Property="Stylus.IsPressAndHoldEnabled"
    			Value="False"/>
    		<Setter Property="Stylus.IsFlicksEnabled"
    			Value="False"/>
    		<Setter Property="Width"
    			Value="38"/>
    		<Setter Property="Height"
    			Value="Auto"/>
    		<Setter Property="Template">
    			<Setter.Value>
      <!-- vertical scroll bar -->
    				<ControlTemplate TargetType="{x:Type s:SurfaceScrollBar}">
    					<Grid x:Name="GridRoot" Background="{TemplateBinding Background}">
    						<Border x:Name="Track"
    							VerticalAlignment="Stretch"
    							HorizontalAlignment="Stretch">
    							<Track x:Name="PART_Track"
    								IsDirectionReversed="True">
    								<Track.IncreaseRepeatButton>
    									<s:SurfaceRepeatButton x:Name="IncreaseRepeat"
    										Background="{TemplateBinding Background}"
    										HorizontalAlignment="Center"
    										Style="{StaticResource SurfaceVertScrollBarRepeatButton}"
    										Command="ScrollBar.PageDownCommand"/>
    								</Track.IncreaseRepeatButton>
    								<Track.DecreaseRepeatButton>
    									<s:SurfaceRepeatButton x:Name="DecreaseRepeat"
    										Background="{TemplateBinding Background}"
    										HorizontalAlignment="Center"
    										Style="{StaticResource SurfaceVertScrollBarRepeatButton}"
    										Command="ScrollBar.PageUpCommand"/>
    								</Track.DecreaseRepeatButton>
    								<Track.Thumb>
    									<s:SurfaceThumb  Style="{StaticResource SurfaceScrollBarThumbStyle}"
    										Background="{TemplateBinding Background}"
    										HorizontalAlignment="Center" 
    										x:Name="Thumb"/>
    								</Track.Thumb>
    							</Track>
    						</Border>
    					</Grid>
    					<ControlTemplate.Triggers>
          <!-- Animates Scrollbar from small to large state -->
    						<Trigger Property="IsEnabled"
    							Value="False">
    							<Setter Property="IsEnabled"
    								TargetName="PART_Track"
    								Value="False"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>

    		<Style.BasedOn>
    			<StaticResource ResourceKey="SurfaceHitAreaBaseStyle"/>
    		</Style.BasedOn>

    		<Style.Triggers>
    <!-- Horizontal orientation -->
    			<Trigger Property="Orientation"   Value="Horizontal">
    				<Setter Property="Width"
    					Value="Auto"/>
    				<Setter Property="Height"
    					Value="38"/>
      <!-- change the whole template -->
    				<Setter Property="Template">
    					<Setter.Value>
    						<ControlTemplate TargetType="{x:Type s:SurfaceScrollBar}">
    							<Grid x:Name="GridRoot" Background="{TemplateBinding Background}">
    								<Border x:Name="Track"
    									VerticalAlignment="Stretch"
    									HorizontalAlignment="Stretch">
    									<Track x:Name="PART_Track">
    										<Track.DecreaseRepeatButton>
    											<s:SurfaceRepeatButton x:Name="DecreaseRepeat"
    												Background="{TemplateBinding Background}"
    												VerticalAlignment="Center"
    												Style="{StaticResource SurfaceHorzScrollBarRepeatButton}"													
    												Command="ScrollBar.PageLeftCommand" />
    										</Track.DecreaseRepeatButton>
    										<Track.IncreaseRepeatButton>
    											<s:SurfaceRepeatButton x:Name="IncreaseRepeat" 
    												Background="{TemplateBinding Background}"
    												VerticalAlignment="Center"
    												Style="{StaticResource SurfaceHorzScrollBarRepeatButton}"
    												Command="ScrollBar.PageRightCommand"/>
    										</Track.IncreaseRepeatButton>
    										<Track.Thumb>
    											<s:SurfaceThumb  Style="{StaticResource SurfaceScrollBarHorizThumbStyle}"	
    												Background="{TemplateBinding Background}"
    												VerticalAlignment="Center" 
    												x:Name="Thumb"/>
    										</Track.Thumb>
    									</Track>
    								</Border>
    							</Grid>
    							<ControlTemplate.Triggers>
              <!-- Animates Scrollbar from small to large state -->
    								<Trigger Property="IsEnabled"
    									Value="False">
    									<Setter Property="Opacity"
    										TargetName="IncreaseRepeat"
    										Value="0.33"/>
    									<Setter Property="Opacity"
    										TargetName="DecreaseRepeat"
    										Value="0.33"/>
    									<Setter Property="IsEnabled"
    										TargetName="PART_Track"
    										Value="False"/>
    								</Trigger>
    							</ControlTemplate.Triggers>
    						</ControlTemplate>
    					</Setter.Value>
    				</Setter>
    			</Trigger>
    		</Style.Triggers>
    	</Style>

<!-- ScrollViewerBase -->
    	<Style x:Key="SurfaceScrollViewerStyle"
    		TargetType="{x:Type s:SurfaceScrollViewer}">
    		<Setter Property="Elasticity"
    			Value="0.4,0.4" />
    		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
    			Value="Auto" />
    		<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
    			Value="Auto" />
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type s:SurfaceScrollViewer}">
    					<Grid   Background="{TemplateBinding Background}"
    						HorizontalAlignment="Stretch" 
    						VerticalAlignment="Stretch">
    						<Grid.ColumnDefinitions>
    							<ColumnDefinition Width="*" />
    							<ColumnDefinition Width="Auto" />
    						</Grid.ColumnDefinitions>
    						<Grid.RowDefinitions>
    							<RowDefinition Height="*" />
    							<RowDefinition Height="Auto" />
    						</Grid.RowDefinitions>
    						<Border x:Name="PART_ElasticBorder"
    							Background="{TemplateBinding Background}">
    							<ScrollContentPresenter 
    								Margin="-1,-1,-1,-1"
    								Grid.Column="0"
    								Grid.ColumnSpan="1"
    								Grid.Row="0"
    								Grid.RowSpan="1"
    								Content="{TemplateBinding Content}"
    								ContentTemplate="{TemplateBinding ContentTemplate}"
    								CanContentScroll="{TemplateBinding CanContentScroll}"
    								CanHorizontallyScroll="False"
    								CanVerticallyScroll="False"
    								ScrollViewer.HorizontalScrollBarVisibility="Disabled" />
    						</Border>

    						<s:SurfaceScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
    							x:Name="PART_HorizontalScrollBar"
    							Grid.Column="0"
    							Grid.Row="1"
    							Orientation="Horizontal"
    							Maximum="{TemplateBinding ScrollableWidth}"
    							Minimum="0"
    							Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
    							AutomationProperties.AutomationId="HorizontalScrollBar"
    							Height="Auto"
    							Style="{StaticResource SurfaceScrollBarStyle}"
    							LargeChange="1"
    							ViewportSize="{TemplateBinding ViewportWidth}"
    							ScrollViewer.HorizontalScrollBarVisibility="Disabled"
    							HorizontalContentAlignment="Stretch"
    							VerticalContentAlignment="Stretch"
    							HorizontalAlignment="Stretch"
    							Foreground="{x:Null}"/>
    						<s:SurfaceScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
    							x:Name="PART_VerticalScrollBar"                           
    							Grid.Column="1"
    							Grid.Row="0"
    							Orientation="Vertical"
    							Maximum="{TemplateBinding ScrollableHeight}"
    							Minimum="0"
    							Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
    							AutomationProperties.AutomationId="VerticalScrollBar"
    							Width="Auto"
    							Style="{StaticResource SurfaceScrollBarStyle}"
    							LargeChange="1"
    							ViewportSize="{TemplateBinding ViewportHeight}"
    							ScrollViewer.HorizontalScrollBarVisibility="Disabled"
    							HorizontalContentAlignment="Stretch"
    							VerticalContentAlignment="Stretch"
    							HorizontalAlignment="Stretch"
    							Foreground="{x:Null}"
    							IsEnabled="True"/>
    					</Grid>
    					<ControlTemplate.Triggers>
    						<Trigger Property="IsEnabled"
    							Value="False">
    							<Setter Property="IsEnabled"
    								TargetName="PART_HorizontalScrollBar"
    								Value="False" />
    							<Setter Property="IsEnabled"
    								TargetName="PART_VerticalScrollBar"
    								Value="False" />
                            </Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>

<!-- Listbox ScrollView -->
    	<Style x:Key="SurfaceListBoxScrollViewerStyle"
    		TargetType="{x:Type s:SurfaceScrollViewer}" 	
    		BasedOn="{StaticResource SurfaceScrollViewerStyle}">
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type s:SurfaceScrollViewer}">
    					<Grid   Background="{DynamicResource {x:Static s:SurfaceColors.ListBoxBackgroundBrushKey}}"
    						HorizontalAlignment="Stretch"
    						Margin="{TemplateBinding BorderThickness}"
    						VerticalAlignment="Stretch"
    						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
    						<Grid.ColumnDefinitions>
    							<ColumnDefinition Width="*" />
    							<ColumnDefinition Width="Auto"/>
    						</Grid.ColumnDefinitions>
    						<Grid.RowDefinitions>
    							<RowDefinition Height="*"/>
    							<RowDefinition Height="Auto"/>
    						</Grid.RowDefinitions>
    						<Border x:Name="PART_ElasticBorder"
    							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
    							BorderBrush="Transparent"
    							Background="{TemplateBinding Background}">
    							<ScrollContentPresenter Margin="{TemplateBinding Padding}"
    								Content="{TemplateBinding Content}"
    								ContentTemplate="{TemplateBinding ContentTemplate}"
    								CanContentScroll="{TemplateBinding CanContentScroll}"
    								CanHorizontallyScroll="False"
    								CanVerticallyScroll="False"
    								Grid.ColumnSpan="1"
    								Grid.RowSpan="1"
    								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
    						</Border>
    						<s:SurfaceScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
    							x:Name="PART_HorizontalScrollBar"
    							Grid.Row="1"
    							Orientation="Horizontal"
    							ViewportSize="{TemplateBinding ViewportWidth}"
    							Maximum="{TemplateBinding ScrollableWidth}"
    							Minimum="0"
    							Background="{TemplateBinding Background}"
    							Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
    							AutomationProperties.AutomationId="HorizontalScrollBar"
    							Height="Auto"                                   
    							Style="{StaticResource SurfaceScrollBarStyle}"                                   
    							LargeChange="1"
    							ClipToBounds="True"
    							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
    						<s:SurfaceScrollBar
    							x:Name="PART_VerticalScrollBar"
    							Grid.Column="0"
    							Grid.Row="0"
    							Orientation="Vertical"
                                HorizontalAlignment="Right"
    							ViewportSize="{TemplateBinding ViewportHeight}"
    							Maximum="{TemplateBinding ScrollableHeight}"
    							Minimum="0"
    							Background="Pink"
    							Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
    							AutomationProperties.AutomationId="VerticalScrollBar"
    							Width="Auto"                                   
    							Style="{StaticResource SurfaceScrollBarStyle}"                                   
    							LargeChange="1"
    							ClipToBounds="True"
    							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
    						<Border x:Name="Container"
    							Grid.Column="1"
    							Grid.Row="1"
    							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
    							BorderBrush="Transparent"
    							Background="{TemplateBinding Background}"/>
    					</Grid>
    					<ControlTemplate.Triggers>
    						<Trigger Property="IsEnabled"
    							Value="False">
    							<Setter Property="IsEnabled"
    								TargetName="PART_HorizontalScrollBar"
    								Value="False"/>
    							<Setter Property="IsEnabled"
    								TargetName="PART_VerticalScrollBar"
    								Value="False"/>
    							<Setter Property="BorderBrush"
    								TargetName="PART_ElasticBorder"
    								Value="{DynamicResource {x:Static s:SurfaceColors.ControlBorderDisabledBrushKey}}"/>
    						</Trigger>
                            <Trigger Property="s:TouchExtensions.AreAnyInputDevicesCapturedWithin"
    							Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_VerticalScrollBar">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0:0:1" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_VerticalScrollBar"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_VerticalScrollBar">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:1" Value="{x:Static Visibility.Hidden}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_VerticalScrollBar">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger> 
                        </ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>

<!-- ListBox -->
    	<Style x:Key="SurfaceListBoxStyle"  TargetType="{x:Type s:SurfaceListBox}"
    		BasedOn="{StaticResource ControlBaseStyle}">
    		<Setter Property="Background"
    			Value="{StaticResource ControlHitAreaBrush}" />
    		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
    			Value="Hidden" />
    		<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
    			Value="Hidden" />
    		<Setter Property="ScrollViewer.CanContentScroll"
    			Value="False" />
    		<Setter Property="s:SurfaceScrollViewer.Elasticity"
    			Value="0,0.4" />
    		<Setter Property="MinHeight"
    			Value="80" />
    		<Setter Property="Foreground"
    			Value="{DynamicResource {x:Static s:SurfaceColors.ButtonForegroundBrushKey}}"/>
    		<Setter Property="BorderBrush"
    			Value="{DynamicResource {x:Static s:SurfaceColors.ListBoxBorderBrushKey}}"/>
    		<Setter Property="Padding"
    			Value="0" />
    		<Setter Property="BorderThickness"
    			Value="2" />
    		<Setter Property="Margin"
    			Value="0" />
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type s:SurfaceListBox}">
    					<Grid  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" >
    						<VisualStateManager.VisualStateGroups>
    							<VisualStateGroup x:Name="ValidationStates">
    								<VisualState x:Name="Valid"/>
    								<VisualState x:Name="InvalidFocused"/>
    								<VisualState x:Name="InvalidUnfocused"/>
    							</VisualStateGroup>
    						</VisualStateManager.VisualStateGroups>
    						<s:SurfaceScrollViewer
    							Style="{StaticResource SurfaceListBoxScrollViewerStyle}"
    							HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
    							VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
    							Focusable="False"
    							Background="{TemplateBinding Background}"
    							Foreground="{TemplateBinding Foreground}"
    							Width="Auto"
    							Height="Auto"
    							MinHeight="{TemplateBinding MinHeight}"
    							MinWidth="{TemplateBinding MinWidth}"
    							x:Name="scrollViewer"
    							Elasticity="{TemplateBinding s:SurfaceScrollViewer.Elasticity}">
    							<ItemsPresenter ClipToBounds="False"
    								MinHeight="{TemplateBinding MinHeight}"
    								MinWidth="{TemplateBinding MinWidth}"/>
    						</s:SurfaceScrollViewer>
    						<Border x:Name="Border"
    							BorderBrush="{TemplateBinding BorderBrush}"
    							BorderThickness="{TemplateBinding BorderThickness}" />
    					</Grid>
    					<ControlTemplate.Triggers>
    						<Trigger Property="IsGrouping"
    							Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll"
    								Value="False" />
                            </Trigger>
                        </ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>

    </s:SurfaceWindow.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
        	<ColumnDefinition Width="240" />
        	<ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Surface:FilterView VerticalAlignment="Center" Grid.Column="0"/>

        <s:SurfaceListBox Background="#e6e6e6" x:Name="listBox" Grid.Column="1" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemsSource="{Binding ProjectNotes}"  
                          ItemTemplate="{StaticResource ProjectNoteButtonTemplate}" ItemsPanel="{DynamicResource ItemPanelTemplate}" Style="{DynamicResource SurfaceListBoxStyle}" />
        <Surface:DetailView Grid.Column="1" />
		<!-- Visibility="{Binding IsDetailViewVisible, Converter={Converters:BoolToVisibilityConverter}}"-->
        <Surface:FilterDetailView Grid.Column="1" Visibility="{Binding IsFilterViewVisible, Converter={Converters:BoolToVisibilityConverter}}"/>
    </Grid>
</s:SurfaceWindow>
